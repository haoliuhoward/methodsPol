<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>General help | Methods of Political Analysis</title>
    <link>/reference/</link>
      <atom:link href="/reference/index.xml" rel="self" type="application/rss+xml" />
    <description>General help</description>
    <generator>Source Themes Academic (https://sourcethemes.com/academic/)</generator><language>en</language>
    <image>
      <url>/media/social-image.png</url>
      <title>General help</title>
      <link>/reference/</link>
    </image>
    
    <item>
      <title>Installing R, RStudio, packages</title>
      <link>/reference/install/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>/reference/install/</guid>
      <description>&lt;p&gt;You will do all of your work in this class with the open source (and free!) programming language 
&lt;a href=&#34;https://cran.r-project.org/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;R&lt;/a&gt;. You will use 
&lt;a href=&#34;https://www.rstudio.com/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;RStudio&lt;/a&gt; as the main program to access R. Think of R as an engine and RStudio as a car dashboardâ€”R handles all the calculations and the actual statistics, while RStudio provides a nice interface for running R code.&lt;/p&gt;
&lt;h1 id=&#34;install-r&#34;&gt;Install R&lt;/h1&gt;
&lt;p&gt;First you need to install R itself (the engine).&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;If you have a &lt;strong&gt;WINDOWS&lt;/strong&gt;, click here: 
&lt;a href=&#34;https://cran.r-project.org/bin/windows/base/R-4.2.1-win.exe&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Download R 4.2.1 for Windows&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;If you have a &lt;strong&gt;MAC&lt;/strong&gt;, click here: 
&lt;a href=&#34;https://cran.r-project.org/bin/macosx/base/R-4.2.1.pkg&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Download R 4.2.1 for macOS&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Double click on the downloaded file (check your &lt;code&gt;Downloads&lt;/code&gt; folder). Click yes through all the prompts to install like any other program.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;If you use macOS, 
&lt;a href=&#34;https://www.xquartz.org/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;download and install XQuartz&lt;/a&gt;. You do not need to do this on Windows.&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;h1 id=&#34;install-rstudio&#34;&gt;Install RStudio&lt;/h1&gt;
&lt;p&gt;Next, you need to install RStudio, the nicer graphical user interface (GUI) for R (the dashboard). Once R and RStudio are both installed, you can ignore R and only use RStudio. RStudio will use R automatically and you won&amp;rsquo;t ever have to interact with R directly.&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;If you have a &lt;strong&gt;WINDOWS&lt;/strong&gt;, click here: 
&lt;a href=&#34;https://download1.rstudio.org/desktop/windows/RStudio-2022.07.1-554.exe&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Download RStudio for Windows&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;If you have a &lt;strong&gt;MAC&lt;/strong&gt;, click here: 
&lt;a href=&#34;https://download1.rstudio.org/desktop/macos/RStudio-2022.07.1-554.dmg&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Download RStudio for macOS&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Double click on the downloaded file (check your &lt;code&gt;Downloads&lt;/code&gt; folder). Click yes through all the prompts to install like any other program.&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;Double click on RStudio to run it (check your applications folder or start menu).&lt;/p&gt;
&lt;h2 id=&#34;extra-installation-help-mac-steps&#34;&gt;Extra installation help (Mac): steps&lt;/h2&gt;
&lt;p&gt;Here&amp;rsquo;s a different 
&lt;a href=&#34;https://scribehow.com/shared/Google_Workflow__ivjLMJ3_SIaV9LDOwaxQHQ&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;helpful walkthrough for Mac&lt;/a&gt;&lt;/p&gt;
&lt;h2 id=&#34;extra-installation-help-windows-video&#34;&gt;Extra installation help (Windows): video&lt;/h2&gt;
&lt;p&gt;Here&amp;rsquo;s a different, 
&lt;a href=&#34;https://www.youtube.com/watch?v=TFGYlKvQEQ4&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;helpful walkthrough for Windows&lt;/a&gt;&lt;/p&gt;
&lt;iframe width=&#34;560&#34; height=&#34;315&#34; src=&#34;https://www.youtube.com/embed/TFGYlKvQEQ4&#34; title=&#34;YouTube video player&#34; frameborder=&#34;0&#34; allow=&#34;accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture&#34; allowfullscreen&gt;&lt;/iframe&gt;
&lt;h1 id=&#34;install-packages&#34;&gt;Install packages&lt;/h1&gt;
&lt;p&gt;Most R packages are easy to install with RStudio. Select the packages panel, click on &amp;ldquo;Install,&amp;rdquo; type the name of the package you want to install, and press enter. R will download the package from the web, so make sure you are connected to wifi when you do it.&lt;/p&gt;
&lt;img src=&#34;../../../../../img/install/install-r-package-panel.png&#34; width=&#34;40%&#34; /&gt;
&lt;p&gt;A less tedious way to do this is via the console or in your script (just make sure to delete afterwards!), by running the following code:&lt;/p&gt;
&lt;pre&gt;&lt;code class=&#34;language-r&#34;&gt;install.packages(&amp;quot;name_of_package&amp;quot;)
&lt;/code&gt;&lt;/pre&gt;
&lt;h2 id=&#34;install-juanr-and-other-packages-from-github&#34;&gt;Install &lt;code&gt;{juanr}&lt;/code&gt; (and other packages from Github)&lt;/h2&gt;
&lt;p&gt;Some packages, like &lt;code&gt;{juanr}&lt;/code&gt; cannot be installed using &lt;code&gt;install.packages()&lt;/code&gt; because they are hosted on 
&lt;a href=&#34;https://github.com/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Github&lt;/a&gt;. To install &lt;code&gt;{juanr}&lt;/code&gt;, you will first need to install &lt;code&gt;{remotes}&lt;/code&gt; and then use &lt;code&gt;install_github()&lt;/code&gt;, like so:&lt;/p&gt;
&lt;pre&gt;&lt;code class=&#34;language-r&#34;&gt;install.packages(&amp;quot;remotes&amp;quot;)
remotes::install_github(&amp;quot;hail2thief/juanr&amp;quot;)
&lt;/code&gt;&lt;/pre&gt;
</description>
    </item>
    
    <item>
      <title>Importing data into R</title>
      <link>/reference/import-data/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>/reference/import-data/</guid>
      <description>&lt;p&gt;Most of the data in this course will come from packages. I do this so we have more time to focus on the stuff that matters. But most of the data in the world is not in a package. How can I read this kind of data into R?&lt;/p&gt;
&lt;p&gt;There&amp;rsquo;s ways to do this in Rstudio through 
&lt;a href=&#34;https://support.rstudio.com/hc/en-us/articles/218611977-Importing-Data-with-the-RStudio-IDE&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;drop-down menus&lt;/a&gt; but I call that the &amp;ldquo;no learning&amp;rdquo; approach.&lt;/p&gt;
&lt;p&gt;To read data into R you need to know two things:&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;What kind of file is it? What is its &lt;em&gt;extension&lt;/em&gt;?&lt;/li&gt;
&lt;li&gt;Where is it? What is its &lt;em&gt;file path&lt;/em&gt;?&lt;/li&gt;
&lt;/ol&gt;
&lt;h2 id=&#34;what-kind-of-file-is-it&#34;&gt;What kind of file is it?&lt;/h2&gt;
&lt;p&gt;There are many different types of files out there. You can tell what type of file a dataset is by looking at its &lt;strong&gt;extension&lt;/strong&gt; - the bit in the file name that comes after the period. Some common file types/extensions are &lt;code&gt;.csv&lt;/code&gt;, &lt;code&gt;.dta&lt;/code&gt;, &lt;code&gt;.xlsx&lt;/code&gt;, etc.&lt;/p&gt;
&lt;p&gt;R has different functions you can use to import different types of files. For a &lt;code&gt;.csv&lt;/code&gt; file you would use &lt;code&gt;read_csv()&lt;/code&gt; or &lt;code&gt;read.csv()&lt;/code&gt;. For a &lt;code&gt;.dta&lt;/code&gt; you would use &lt;code&gt;read_dta()&lt;/code&gt; from the &lt;code&gt;{haven}&lt;/code&gt; package. For an &lt;code&gt;.xlsx&lt;/code&gt; file you would use &lt;code&gt;read_excel()&lt;/code&gt; from &lt;code&gt;{readxl}&lt;/code&gt;. If you&amp;rsquo;re not sure, google what function to use for a particular data file.&lt;/p&gt;
&lt;h2 id=&#34;where-is-it&#34;&gt;Where is it?&lt;/h2&gt;
&lt;p&gt;This part is tricky for people who don&amp;rsquo;t have a lot of experience working with computers. But, in short: every file that is on your computer has a &amp;ldquo;path&amp;rdquo; or &amp;ldquo;address&amp;rdquo; that uniquely identifies it on your computer. This address changes with your file&amp;rsquo;s location; if you moved the file for whatever reason, the file path would change. You need the file path in order to tell R where to look at your data.&lt;/p&gt;
&lt;p&gt;How to find it? Operating systems are always changing so in general the best thign is to google how to find a file&amp;rsquo;s filepath and then remember it. But the following seems to have worked on Mac for a long time now:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;find the file in your Finder&lt;/li&gt;
&lt;li&gt;right-click and select &amp;ldquo;get info&amp;rdquo;&lt;/li&gt;
&lt;li&gt;at the top left, under &amp;ldquo;General&amp;rdquo;, you&amp;rsquo;ll see the file path next to &amp;ldquo;Where:&amp;rdquo;&lt;/li&gt;
&lt;li&gt;right-click that path and select &amp;ldquo;copy as Pathname&amp;rdquo;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;And on Windows you can 
&lt;a href=&#34;https://www.howtogeek.com/670447/how-to-copy-the-full-path-of-a-file-on-windows-10/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;do this&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;Code to import data into R might look like this:&lt;/p&gt;
&lt;pre&gt;&lt;code class=&#34;language-r&#34;&gt;df = read_csv(&amp;quot;/Users/juan/Dropbox/teaching/co2-data/owid-co2-data.csv&amp;quot;)
&lt;/code&gt;&lt;/pre&gt;
&lt;h2 id=&#34;how-to-do-this-better&#34;&gt;How to do this better&lt;/h2&gt;
&lt;p&gt;For working on longer term projects, it is more convenient to use &lt;em&gt;relative&lt;/em&gt; file paths in conjunction with something like R projects (&lt;code&gt;.Rproj&lt;/code&gt;) + the &lt;code&gt;{here}&lt;/code&gt; library.&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Writing R code neatly</title>
      <link>/reference/style/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>/reference/style/</guid>
      <description>&lt;h2 id=&#34;r-style-conventions&#34;&gt;R style conventions&lt;/h2&gt;
&lt;p&gt;R is fairly forgiving about how you type code (unlike other languages like Python, where miscounting spaces can ruin your code!). All of these things will do exactly the same thing:&lt;/p&gt;
&lt;pre&gt;&lt;code class=&#34;language-r&#34;&gt;mpg %&amp;gt;% 
  filter(cty &amp;gt; 10, class == &amp;quot;compact&amp;quot;)

mpg %&amp;gt;% filter(cty &amp;gt; 10, class == &amp;quot;compact&amp;quot;)

mpg %&amp;gt;% 
  filter(cty &amp;gt; 10, 
         class == &amp;quot;compact&amp;quot;)

mpg %&amp;gt;% filter(cty&amp;gt;10, class==&amp;quot;compact&amp;quot;)

filter(mpg,cty&amp;gt;10,class==&amp;quot;compact&amp;quot;)

mpg %&amp;gt;% 
filter(cty &amp;gt; 10, 
                        class == &amp;quot;compact&amp;quot;)

filter ( mpg,cty&amp;gt;10,     class==&amp;quot;compact&amp;quot; )
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;But you&amp;rsquo;ll notice that only a few of those iterations (the first three) are easily readable.&lt;/p&gt;
&lt;p&gt;To help improve readability and make it easier to share code with others, there&amp;rsquo;s 
&lt;a href=&#34;https://style.tidyverse.org/index.html&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;an unofficial style guide for writing R code&lt;/a&gt;. It&amp;rsquo;s fairly short and just has lots of examples of good and bad ways of writing code (naming variables, dealing with long lines, using proper indentation levels, etc.)â€”you should glance through it some time.&lt;/p&gt;
&lt;p&gt;RStudio has a built-in way of cleaning up your code. Select some code, press &lt;kbd&gt;ctrl&lt;/kbd&gt; + &lt;kbd&gt;i&lt;/kbd&gt; (on Windows) or &lt;kbd&gt;âŒ˜&lt;/kbd&gt; + &lt;kbd&gt;i&lt;/kbd&gt; (on macOS), and R will reformat the code for you. It&amp;rsquo;s not always perfect, but it&amp;rsquo;s really helpful for getting indentation right without having to manually hit &lt;kbd&gt;space&lt;/kbd&gt; a billion times.&lt;/p&gt;
&lt;h2 id=&#34;main-style-things-to-pay-attention-to-for-this-class&#34;&gt;Main style things to pay attention to for this class&lt;/h2&gt;
&lt;h3 id=&#34;spacing&#34;&gt;Spacing&lt;/h3&gt;
&lt;blockquote&gt;
&lt;p&gt;See the 
&lt;a href=&#34;https://style.tidyverse.org/syntax.html#spacing&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;&amp;ldquo;Spacing&amp;rdquo; section&lt;/a&gt; in the tidyverse style guide.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;Put spaces after commas (like in regular English):&lt;/p&gt;
&lt;pre&gt;&lt;code class=&#34;language-r&#34;&gt;# Good
filter(mpg, cty &amp;gt; 10)

# Bad
filter(mpg , cty &amp;gt; 10)
filter(mpg ,cty &amp;gt; 10)
filter(mpg,cty &amp;gt; 10)
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Put spaces around operators like &lt;code&gt;+&lt;/code&gt;, &lt;code&gt;-&lt;/code&gt;, &lt;code&gt;&amp;gt;&lt;/code&gt;, &lt;code&gt;=&lt;/code&gt;, etc.:&lt;/p&gt;
&lt;pre&gt;&lt;code class=&#34;language-r&#34;&gt;# Good
filter(mpg, cty &amp;gt; 10)

# Bad
filter(mpg, cty&amp;gt;10)
filter(mpg, cty&amp;gt; 10)
filter(mpg, cty &amp;gt;10)
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Don&amp;rsquo;t put spaces around parentheses that are parts of functions:&lt;/p&gt;
&lt;pre&gt;&lt;code class=&#34;language-r&#34;&gt;# Good
filter(mpg, cty &amp;gt; 10)

# Bad
filter (mpg, cty &amp;gt; 10)
filter ( mpg, cty &amp;gt; 10)
filter( mpg, cty &amp;gt; 10 )
&lt;/code&gt;&lt;/pre&gt;
&lt;h3 id=&#34;long-lines&#34;&gt;Long lines&lt;/h3&gt;
&lt;blockquote&gt;
&lt;p&gt;See the 
&lt;a href=&#34;https://style.tidyverse.org/syntax.html#long-lines&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;&amp;ldquo;Long lines&amp;rdquo; section&lt;/a&gt; in the tidyverse style guide.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;It&amp;rsquo;s generally good practice to not have really long lines of code. A good suggestion is to keep lines at a maximum of 80 characters. Instead of counting characters by hand (ew), in RStudio go to &amp;ldquo;Tools&amp;rdquo; &amp;gt; &amp;ldquo;Global Options&amp;rdquo; &amp;gt; &amp;ldquo;Code&amp;rdquo; &amp;gt; &amp;ldquo;Display&amp;rdquo; and check the box for &amp;ldquo;Show margin&amp;rdquo;. You should now see a really thin line indicating 80 characters. Again, you can go beyond thisâ€”that&amp;rsquo;s fine. It&amp;rsquo;s just good practice to avoid going too far past it.&lt;/p&gt;
&lt;p&gt;You can add line breaks inside longer lines of code. Line breaks should come after commas, and things like function arguments should align within the function:&lt;/p&gt;
&lt;pre&gt;&lt;code class=&#34;language-r&#34;&gt;# Good
filter(mpg, cty &amp;gt; 10, class == &amp;quot;compact&amp;quot;)

# Good
filter(mpg, cty &amp;gt; 10, 
       class == &amp;quot;compact&amp;quot;)

# Good
filter(mpg,
       cty &amp;gt; 10,
       class == &amp;quot;compact&amp;quot;)

# Bad
filter(mpg, cty &amp;gt; 10, class %in% c(&amp;quot;compact&amp;quot;, &amp;quot;pickup&amp;quot;, &amp;quot;midsize&amp;quot;, &amp;quot;subcompact&amp;quot;, &amp;quot;suv&amp;quot;, &amp;quot;2seater&amp;quot;, &amp;quot;minivan&amp;quot;))

# Good
filter(mpg, 
       cty &amp;gt; 10, 
       class %in% c(&amp;quot;compact&amp;quot;, &amp;quot;pickup&amp;quot;, &amp;quot;midsize&amp;quot;, &amp;quot;subcompact&amp;quot;, 
                    &amp;quot;suv&amp;quot;, &amp;quot;2seater&amp;quot;, &amp;quot;minivan&amp;quot;))
&lt;/code&gt;&lt;/pre&gt;
&lt;h3 id=&#34;pipes--and-ggplot-layers-&#34;&gt;Pipes (&lt;code&gt;%&amp;gt;%&lt;/code&gt;) and ggplot layers (&lt;code&gt;+&lt;/code&gt;)&lt;/h3&gt;
&lt;p&gt;Put each layer of a ggplot plot on separate lines, with the &lt;code&gt;+&lt;/code&gt; at the end of the line, indented with two spaces:&lt;/p&gt;
&lt;pre&gt;&lt;code class=&#34;language-r&#34;&gt;# Good
ggplot(mpg, aes(x = cty, y = hwy, color = class)) +
  geom_point() +
  geom_smooth() +
  theme_bw()

# Bad
ggplot(mpg, aes(x = cty, y = hwy, color = class)) +
  geom_point() + geom_smooth() +
  theme_bw()

# Super bad
ggplot(mpg, aes(x = cty, y = hwy, color = class)) + geom_point() + geom_smooth() + theme_bw()

# Super bad and won&#39;t even work
ggplot(mpg, aes(x = cty, y = hwy, color = class))
  + geom_point()
  + geom_smooth() 
  + theme_bw()
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Put each step in a dplyr pipeline on separate lines, with the &lt;code&gt;%&amp;gt;%&lt;/code&gt; at the end of the line, indented with two spaces:&lt;/p&gt;
&lt;pre&gt;&lt;code class=&#34;language-r&#34;&gt;# Good
mpg %&amp;gt;% 
  filter(cty &amp;gt; 10) %&amp;gt;% 
  group_by(class) %&amp;gt;% 
  summarize(avg_hwy = mean(hwy))

# Bad
mpg %&amp;gt;% filter(cty &amp;gt; 10) %&amp;gt;% group_by(class) %&amp;gt;% 
  summarize(avg_hwy = mean(hwy))

# Super bad
mpg %&amp;gt;% filter(cty &amp;gt; 10) %&amp;gt;% group_by(class) %&amp;gt;% summarize(avg_hwy = mean(hwy))

# Super bad and won&#39;t even work
mpg %&amp;gt;% 
  filter(cty &amp;gt; 10)
  %&amp;gt;% group_by(class)
  %&amp;gt;% summarize(avg_hwy = mean(hwy))
&lt;/code&gt;&lt;/pre&gt;
&lt;h3 id=&#34;comments&#34;&gt;Comments&lt;/h3&gt;
&lt;blockquote&gt;
&lt;p&gt;See the 
&lt;a href=&#34;https://style.tidyverse.org/syntax.html#comments&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;&amp;ldquo;Comments&amp;rdquo; section&lt;/a&gt; in the tidyverse style guide.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;Comments should start with a comment symbol and a single space: &lt;code&gt;# &lt;/code&gt;&lt;/p&gt;
&lt;pre&gt;&lt;code class=&#34;language-r&#34;&gt;# Good

#Bad

    #Bad
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;If the comment is really short (and won&amp;rsquo;t cause you to go over 80 characters in the line), you can include it in the same line as the code, separated by at least two spaces (it works with one space, but using a couple can enhance readability):&lt;/p&gt;
&lt;pre&gt;&lt;code class=&#34;language-r&#34;&gt;mpg %&amp;gt;% 
  filter(cty &amp;gt; 10) %&amp;gt;%  # Only rows where cty is 10 +
  group_by(class) %&amp;gt;%  # Divide into class groups
  summarize(avg_hwy = mean(hwy))  # Find the average hwy in each group
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;You can add extra spaces to get inline comments to align, if you want:&lt;/p&gt;
&lt;pre&gt;&lt;code class=&#34;language-r&#34;&gt;mpg %&amp;gt;% 
  filter(cty &amp;gt; 10) %&amp;gt;%            # Only rows where cty is 10 +
  group_by(class) %&amp;gt;%             # Divide into class groups
  summarize(avg_hwy = mean(hwy))  # Find the average hwy in each group
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;If the comment is really long, you can break it into multiple lines. RStudio can do this for you if you go to &amp;ldquo;Code&amp;rdquo; &amp;gt; &amp;ldquo;Reflow comment&amp;rdquo;&lt;/p&gt;
&lt;pre&gt;&lt;code class=&#34;language-r&#34;&gt;# Good
# Happy families are all alike; every unhappy family is unhappy in its own way.
# Everything was in confusion in the Oblonskysâ€™ house. The wife had discovered
# that the husband was carrying on an intrigue with a French girl, who had been
# a governess in their family, and she had announced to her husband that she
# could not go on living in the same house with him. This position of affairs
# had now lasted three days, and not only the husband and wife themselves, but
# all the members of their family and household, were painfully conscious of it.

# Bad
# Happy families are all alike; every unhappy family is unhappy in its own way. Everything was in confusion in the Oblonskysâ€™ house. The wife had discovered that the husband was carrying on an intrigue with a French girl, who had been a governess in their family, and she had announced to her husband that she could not go on living in the same house with him. This position of affairs had now lasted three days, and not only the husband and wife themselves, but all the members of their family and household, were painfully conscious of it.
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Though, if you&amp;rsquo;re dealing with comments that are &lt;em&gt;that&lt;/em&gt; long, consider putting the text in R Markdown instead and having it be actual prose.&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>How to scrape websites</title>
      <link>/reference/scraping-websites/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>/reference/scraping-websites/</guid>
      <description>&lt;h2 id=&#34;intro&#34;&gt;Intro&lt;/h2&gt;
&lt;pre&gt;&lt;code class=&#34;language-r&#34;&gt;library(tidyverse)
library(rvest)
library(janitor)
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;There&amp;rsquo;s a lot of information on the internet. Sometimes this information is nicely formatted, which means we can scrape it from the internet fairly easily.&lt;/p&gt;
&lt;p&gt;Take a look at the table on this page of Simpsons guest star appearances: 
&lt;a href=&#34;https://en.wikipedia.org/wiki/List_of_The_Simpsons_guest_stars&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;https://en.wikipedia.org/wiki/List_of_The_Simpsons_guest_stars&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;We&amp;rsquo;re gonna pull this table from the internet into R. You&amp;rsquo;ll need the &lt;code&gt;rvest&lt;/code&gt; and &lt;code&gt;janitor&lt;/code&gt; packages. Install if you don&amp;rsquo;t have them.&lt;/p&gt;
&lt;h2 id=&#34;pulling-the-table&#34;&gt;Pulling the table&lt;/h2&gt;
&lt;p&gt;First step is to pull down the whole Wikipedia page. To do so, use the &lt;code&gt;read_html&lt;/code&gt; function, putting the URL of the site we want to scrape inside of it (in quotation marks!). Assign this to an object named &lt;code&gt;content&lt;/code&gt;.&lt;/p&gt;
&lt;pre&gt;&lt;code class=&#34;language-r&#34;&gt;df = read_html(&amp;quot;https://en.wikipedia.org/wiki/List_of_The_Simpsons_guest_stars&amp;quot;)
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Now we have the whole page. We just want that table. Run the &lt;code&gt;html_table&lt;/code&gt; function on &lt;code&gt;content&lt;/code&gt; and store that in an object called &lt;code&gt;table&lt;/code&gt;. Add &lt;code&gt;fill = TRUE&lt;/code&gt; within the function otherwise you&amp;rsquo;ll get an error.&lt;/p&gt;
&lt;pre&gt;&lt;code class=&#34;language-r&#34;&gt;table = html_table(df, fill = TRUE)
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Notice up top in your environment that you have an object called &lt;code&gt;table&lt;/code&gt; that is a list with 13 elements. That means we have 13 tables from that page. But we only want the one with guest stars! Which one is it?&lt;/p&gt;
&lt;p&gt;We need to look at the elements in that list to figure out which of the 13 tables is ours. To look at a specific element in a list, we can use the &lt;code&gt;pluck()&lt;/code&gt; function, like so:&lt;/p&gt;
&lt;pre&gt;&lt;code class=&#34;language-r&#34;&gt;table %&amp;gt;% pluck(1)
&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## # A tibble: 1 Ã— 1
##   X1                                                                            
##   &amp;lt;chr&amp;gt;                                                                         
## 1 Seasons: 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 â€¢ Movie â€¢ 19 20 21 22 2â€¦
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;The first element in our list is not what we want; what about the second?&lt;/p&gt;
&lt;pre&gt;&lt;code class=&#34;language-r&#34;&gt;table %&amp;gt;% pluck(2)
&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## # A tibble: 746 Ã— 6
##    Season `Guest star`             `Role(s)`  No.   `Prod. code` `Episode title`
##     &amp;lt;int&amp;gt; &amp;lt;chr&amp;gt;                    &amp;lt;chr&amp;gt;      &amp;lt;chr&amp;gt; &amp;lt;chr&amp;gt;        &amp;lt;chr&amp;gt;          
##  1     21 Matt Groening            Himself    442â€“â€¦ LABF13       &amp;quot;\&amp;quot;Homer the Wâ€¦
##  2     21 Kevin Michael Richardson Security â€¦ 442â€“â€¦ LABF13       &amp;quot;\&amp;quot;Homer the Wâ€¦
##  3     21 Seth Rogen               Lyle McCaâ€¦ 442â€“â€¦ LABF13       &amp;quot;\&amp;quot;Homer the Wâ€¦
##  4     21 Marcia Wallace           Edna Krabâ€¦ 443â€“â€¦ LABF15       &amp;quot;\&amp;quot;Bart Gets aâ€¦
##  5     21 Chuck Liddell            Himself    444â€“â€¦ LABF16       &amp;quot;\&amp;quot;The Great Wâ€¦
##  6     21 Marcia Wallace           Edna Krabâ€¦ 444â€“â€¦ LABF16       &amp;quot;\&amp;quot;The Great Wâ€¦
##  7     21 Marcia Wallace           Edna Krabâ€¦ 445â€“â€¦ LABF14       &amp;quot;\&amp;quot;Treehouse oâ€¦
##  8     21 Marcia Wallace           Edna Krabâ€¦ 446â€“â€¦ LABF17       &amp;quot;\&amp;quot;The Devil Wâ€¦
##  9     21 Jonah Hill               Andy Hamiâ€¦ 447â€“â€¦ LABF18       &amp;quot;\&amp;quot;Pranks and â€¦
## 10     21 Marcia Wallace           Edna Krabâ€¦ 447â€“â€¦ LABF18       &amp;quot;\&amp;quot;Pranks and â€¦
## # â„¹ 736 more rows
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;That&amp;rsquo;s what we want. Let&amp;rsquo;s assign that as an object:&lt;/p&gt;
&lt;pre&gt;&lt;code class=&#34;language-r&#34;&gt;simpsons = table %&amp;gt;% 
  pluck(2)
&lt;/code&gt;&lt;/pre&gt;
&lt;h2 id=&#34;cleaning-up-the-data-and-making-the-plot&#34;&gt;Cleaning up the data and making the plot&lt;/h2&gt;
&lt;p&gt;The column names of this table are hard to work with. Let&amp;rsquo;s use the &lt;code&gt;clean_names&lt;/code&gt; function on our table and assign that to another object called &lt;code&gt;clean_simpsons&lt;/code&gt;.&lt;/p&gt;
&lt;pre&gt;&lt;code class=&#34;language-r&#34;&gt;clean_simpsons = 
  simpsons %&amp;gt;% clean_names()
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Finally, we can use our tidyverse know-how to calculate how many times each Guest Star has appeared on the Simpson&amp;rsquo;s, and filter the data down to just those who have appeared more than twice. We can then make a plot showing how many times each of these guest stars has appeared on the show.&lt;/p&gt;
&lt;pre&gt;&lt;code class=&#34;language-r&#34;&gt;plot_simpsons = clean_simpsons %&amp;gt;% 
  group_by(guest_star) %&amp;gt;% 
  tally() %&amp;gt;% 
  filter(n &amp;gt; 2)

ggplot(plot_simpsons, aes(x = reorder(guest_star, n), y = n)) + 
  geom_col() + 
  coord_flip()
&lt;/code&gt;&lt;/pre&gt;
&lt;img src=&#34;/reference/scraping-websites_files/figure-html/unnamed-chunk-8-1.png&#34; width=&#34;672&#34; /&gt;
&lt;p&gt;Done! Here are some other good ones to try:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;a href=&#34;https://en.wikipedia.org/wiki/List_of_nicknames_used_by_Donald_Trump&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;https://en.wikipedia.org/wiki/List_of_nicknames_used_by_Donald_Trump&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;
&lt;a href=&#34;https://en.wikipedia.org/wiki/List_of_helicopter_prison_escapes&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;https://en.wikipedia.org/wiki/List_of_helicopter_prison_escapes&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;
&lt;a href=&#34;https://en.wikipedia.org/wiki/Passengers_of_the_Titanic&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;https://en.wikipedia.org/wiki/Passengers_of_the_Titanic&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;
&lt;a href=&#34;https://en.wikipedia.org/wiki/Last_meal&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;https://en.wikipedia.org/wiki/Last_meal&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;
&lt;a href=&#34;https://en.wikipedia.org/wiki/List_of_consorts_of_the_Ottoman_sultans&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;https://en.wikipedia.org/wiki/List_of_consorts_of_the_Ottoman_sultans&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;
&lt;a href=&#34;https://en.wikipedia.org/wiki/List_of_people_who_died_climbing_Mount_Everest&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;https://en.wikipedia.org/wiki/List_of_people_who_died_climbing_Mount_Everest&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
</description>
    </item>
    
  </channel>
</rss>
